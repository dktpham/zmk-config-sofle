/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

/ {
    // Activate ADJUST layer by pressing raise and lower

    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <ADJUST>;
        };
    };

    combos {
        compatible = "zmk,combos";

        ae_umlaut {
            bindings = <&kp RA(Q)>;
            key-positions = <25 26>;
            layers = <0>;
            timeout-ms = <30>;
        };

        szet {
            bindings = <&kp RA(S)>;
            key-positions = <26 27>;
            timeout-ms = <30>;
        };

        ue_umlaut {
            bindings = <&kp RA(Y)>;
            key-positions = <19 20>;
            timeout-ms = <30>;
        };

        oe_umlaut {
            bindings = <&kp RA(P)>;
            key-positions = <21 22>;
            timeout-ms = <30>;
        };

        f13 {
            bindings = <&kp F13>;
            key-positions = <13 14>;
            timeout-ms = <30>;
        };

        f14 {
            bindings = <&kp F14>;
            key-positions = <14 15>;
            timeout-ms = <30>;
        };

        f15 {
            bindings = <&kp F15>;
            key-positions = <15 16>;
            timeout-ms = <30>;
        };

        f16 {
            bindings = <&kp F16>;
            key-positions = <16 17>;
            timeout-ms = <30>;
        };
    };

    macros {
        quote_space: quote_space {
            compatible = "zmk,behavior-macro";
            label = "quote_space";
            #binding-cells = <0>;
            bindings = <&kp SINGLE_QUOTE &kp SPACE>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  `    |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
   &gresc  &kp N1                        &kp N2                          &kp N3                      &kp N4       &kp N5                            &kp N6                       &kp N7                    &kp N8                         &kp N9    &kp N0     &kp MINUS
&kp MINUS   &kp Q                         &kp W                           &kp E                       &kp R        &kp T                             &kp Y                        &kp U                     &kp I                          &kp O     &kp P      &kp BSPC
  &kp TAB   &kp A  &home_row_mod_l LEFT_SHIFT S  &home_row_mod_l LEFT_CONTROL D  &home_row_mod_l LEFT_ALT F        &kp G                             &kp H  &home_row_mods_r LEFT_ALT J  &home_row_mods_r LCTRL K  &home_row_mods_r LEFT_SHIFT L  &kp SEMI  &quote_space
&kp LSHFT   &kp Z                         &kp X                           &kp C                       &kp V        &kp B  &kp C_MUTE    &none        &kp N                        &kp M                 &kp COMMA                        &kp DOT  &kp FSLH     &kp RSHFT
                                       &kp LGUI                        &kp LALT                   &kp LCTRL  &lt 1 ENTER     &kp F23  &kp F24  &lt 2 SPACE                    &kp RCTRL                  &kp RALT                       &kp RGUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp RA(TAB) RA(RS(TAB))>;
        };

        lower_layer {
            // TODO: Some binds are waiting for shifted keycode support.
            // ------------------------------------------------------------------------------------------------------------
            // |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
            // | `     |   1 |   2 |   3  |   4  |   5  |                   |   6  |   7   |   8   |   9  |    0  |  F12  |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
            // |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
   &trans     &kp F1     &kp F2       &kp F3    &kp F4     &kp F5                     &kp F6    &kp F7           &kp F8     &kp F9   &kp F10   &kp F11
&kp GRAVE     &kp N1     &kp N2       &kp N3    &kp N4     &kp N5                     &kp N6    &kp N7           &kp N8     &kp N9    &kp N0   &kp F12
   &trans   &kp EXCL     &kp AT     &kp HASH  &kp DLLR  &kp PRCNT                  &kp CARET  &kp AMPS  &kp KP_MULTIPLY   &kp LPAR  &kp RPAR  &kp PIPE
   &trans  &kp EQUAL  &kp MINUS  &kp KP_PLUS  &kp LBRC   &kp RBRC  &trans  &trans   &kp LBKT  &kp RBKT         &kp SEMI  &kp COLON  &kp BSLH    &trans
                         &trans       &trans    &trans     &trans  &trans  &trans     &trans    &trans           &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp LG(LC(RIGHT)) LG(LC(LEFT))>;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |BTCLR| BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
            // |     | INS  | PSCR | GUI   |       |      |                | PGUP |      |   ^   |      |       |       |
            // |     | ALT  | CTRL | SHIFT |       | CAPS |                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
            // |     | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |      |       |      |       |       |
            //              |      |       |       |      |      |  |      |      |      |       |      |

            bindings = <
&trans      &trans     &trans       &trans       &trans    &trans                  &trans    &trans    &trans     &trans   &trans  &trans
&trans     &kp INS  &kp PSCRN  &kp K_CMENU       &trans    &trans                  &trans  &kp HOME    &kp UP    &kp END   &trans  &trans
&trans      &trans     &trans       &trans       &trans  &kp CLCK                  &trans  &kp LEFT  &kp DOWN  &kp RIGHT  &kp DEL  &trans
&trans  &kp K_UNDO  &kp K_CUT   &kp K_COPY  &kp K_PASTE    &trans  &trans  &trans  &trans    &trans    &trans     &trans   &trans  &trans
                       &trans       &trans       &trans    &trans  &trans  &trans  &trans    &trans    &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PAGE_DOWN PAGE_UP>;
        };

        // ------------------------------------------------------------------------------------------------------------
        // |BTCLR | BT1   | BT2   |  BT3  |  BT4  |  BT5  |                |      |      |       |      |       |       |
        // |      |RGB_HUD|RGB_HUI|RGB_SAD|RGB_SAI|RGB_EFF|                |      |      |       |      |       |       |
        // |      |RGB_BRD|RGB_BRI|       |       |       |                |      |      |       |      |       |       |
        // |      |       |       |       |       |       |RGB_TOG| |      |      |      |       |      |       |       |
        //                |       |       |       |       |       | |      |      |      |       |      |

        Adjust_layer {
            bindings = <
       &bt BT_CLR     &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4                          &none  &none  &none  &none  &none  &none
&ext_power EP_TOG  &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &rgb_ug RGB_SAD  &rgb_ug RGB_SAI  &rgb_ug RGB_EFF                          &none  &none  &none  &none  &none  &none
            &none  &rgb_ug RGB_BRD  &rgb_ug RGB_BRI            &none            &none            &none                          &none  &none  &none  &none  &none  &none
            &none            &none            &none            &none            &none            &none  &rgb_ug RGB_TOG  &none  &none  &none  &none  &none  &none  &none
                                              &none            &none            &none            &none            &none  &none  &none  &none  &none  &none
            >;
        };
    };
};
